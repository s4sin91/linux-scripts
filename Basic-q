What is BASH?

full form: Bourne Again Shell

‡®á‡®π ‡®á‡©±‡®ï program ‡®π‡©à, ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ ‡®ï‡©ã‡®à ‡®µ‡©Ä task execute ‡®ï‡®∞‡®® ‡®≤‡®à ‡®ï‡©ã‡®à (base program, System software ‡®ö‡®æ‡®π‡©Ä‡®¶‡®æ) ‡®ú‡®ø‡®∏ ‡®â‡©±‡®™‡®∞ command type ‡®ï‡®∞ ‡®∏‡®ï‡©Ä‡®è ‡®§‡©á ‡®§‡©á ‡®á‡®π kernal ‡®®‡®æ‡®≤ ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®¶‡®æ(when we type command it informs kernel) task execute ‡®ï‡®∞‡®® ‡®≤‡®à‡•§command ‡®ú‡®ø‡®∏ program ‡®®‡®æ‡®≤ execute ‡®π‡©ã ‡®∞‡®π‡©Ä ‡®π‡©à ‡®â‡®π bash ‡®π‡©à‡•§ ‡®ú‡©á ‡®â‡®π command exist ‡®ï‡®∞‡®¶‡©Ä ‡®§‡®æ‡®Ç ‡®â‡®π run ‡®π‡©ã‡®ú‡©Ç ‡®®‡®π‡©Ä ‡®§‡®æ‡®Ç ‡®®‡®π‡©Ä ‡®π‡©ã‡®£‡©Ä ‡®§‡©á shell ‡®¶‡©±‡®∏ ‡®¶‡©á‡®ä‡®ó‡®æ command not found‡•§ ‡®á‡®∏‡®®‡©Ç‡©∞ (bash) command line interpreter ‡®µ‡©Ä ‡®ï‡®π‡®ø‡©∞‡®¶‡©á‡•§

the default shell of linux Os - /bin/bash

Bash is the improved version of sh(Bourne shell)

Regular User start the shell prompt, end with $sign

For the root User (Super User),shell prompt ends with #sign

Bash enables the user to execute the command 

Bash is similar to cmd.exe, used in MS Windows

The bash shell provides a scripting language that can support automation of tasks.

Shell basics

Command entered in prompt have three basic component

1)command, 2) option, 3) argument

Example: [(1)useradd] [(2)-u 2001] [3) user01]

which:-->‡®ï‡©ã‡®à ‡®µ‡©Ä command ‡®¶‡®æ ‡®Ü‡®™‡®æ location ‡®¶‡©á‡®ñ ‡®∏‡®ï‡®¶‡©á ‡®µ‡©Ä ‡®â‡®π ‡®ï‡®ø‡©±‡®•‡©á stored ‡®π‡©ã‡®à ‡®π‡©à‡•§used to locate the executable files or location of a program from the file system. It displays the path where the specified file or command is stored.

terminal?

‡®ï‡©ã‡®à ‡®µ‡©Ä command type ‡®ï‡®∞‡®® ‡®≤‡®à ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ ‡®ï‡©ã‡®à interface ‡®ö‡®æ‡®π‡©Ä‡®¶‡®æ ‡®§‡©á ‡®á‡®∏‡®®‡©Ç‡©∞ terminal ‡®ï‡®π‡®ø‡©∞‡®¶‡©á‡•§

terminal 2type ‡®¶‡©á ‡®π‡©Å‡©∞‡®¶‡©á tts and pts.(1)physical console(tts- teletype).  (2) virtual console (pts- Pseudo terminal slave) 

in linux we can open 6 physical terminal from TTY1-TTY6.why & what usage, suppose ‡®Æ‡©à‡®Ç ‡®á‡©±‡®ï terminal ‡®§‡©á ‡®ï‡©∞‡®Æ ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ ‡®∏‡©Ä ‡®â‡®π terminal busy ‡®π‡©ã ‡®ó‡®ø‡®Ü ‡®ï‡®ø‡®â‡®ï‡®ø ‡®â‡®∏ ‡®§‡©á ‡®ï‡©ã‡®à ‡®µ‡©Ä long time run operation ‡®ö‡©±‡®≤ ‡®∞‡®ø‡®π‡®æ ‡®∏‡©Ä‡•§there are 2 types of interface GUI & CUI (CLI)

in CUI,there are 6 terminal like TTY1-TTY6

In GUI, open multiple virtual terminal like PTS1,PTS2...and so on

‡®ú‡©ã terminal ‡®Ü‡®™‡®æ open ‡®ï‡®∞‡®¶‡©á ‡®â‡®π virtual console terminal ‡®π‡©Å‡©∞‡®¶‡®æ why Bcoz ‡®π‡©Å‡©∞‡®¶‡®æ ‡®á‡®π Graphical console ‡®¶‡©á ‡®Ö‡©∞‡®¶‡®∞ virtual console ‡®π‡©à ‡®á‡®∏ ‡®≤‡®à it is virtual we can check it by [tty] command both in physical & virtual terminal. physical ‡®Ö‡©∞‡®¶‡®∞ virtual console ‡®π‡©Å‡©∞‡®¶‡®æ

linux ‡®á‡©±‡®ï multi-user OS ‡®π‡©à, ‡®á‡®∏‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®æ ‡®¨‡®ø‡®®‡®æ logout kite same user ‡®®‡©Ç‡©∞ multiple accounts open&run ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á for more info GOTO 30:00 on RHCS craw security lec2. ‡®Æ‡®§‡®≤‡®¨ ‡®Ü‡®™‡®æ TTY6 open ‡®ï‡©Ä‡®§‡®æ ‡®§‡©á ‡®á‡®∏‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®æ, ‡®ï‡©ã‡®à user ‡®ú‡©á TTY2 ‡®§‡©á ‡®ï‡©∞‡®Æ ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ c ‡®§‡©á ‡®Ü‡®™‡®æ TTY6 ‡®§‡©á ‡®â‡®∏‡®®‡©Ç‡©∞ login(when we login ‡®á‡®π ‡®â‡®∏ user ‡®¶‡©Ä last login ‡®µ‡©Ä show ‡®ï‡®∞‡©Ç screen ‡®§‡©á) ‡®ï‡®∞‡®≤‡®ø‡®Ü ‡®§‡®æ‡®Ç ‡®â‡®∏‡®®‡©Ç‡©∞ TTY2 ‡®§‡©á logout ‡®ï‡®∞‡®® ‡®¶‡©Ä ‡®≤‡©ã‡©ú ‡®®‡®π‡©Ä we can check which user working on which console by [w] comnand

üî¥logout,exit,ctrl+d?

login ‡®ï‡®∞‡®® ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ shell ‡®Æ‡®ø‡©±‡®≤ ‡®ú‡®æ‡®µ‡©á [-]‡®á‡®∏ not compulsory, ‡®™‡®∞ ‡®á‡®∏ ‡®®‡®æ‡®≤ ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ ‡®Ü‡®µ‡®¶‡®æ seprate shell ‡®®‡®π‡©Ä ‡®Æ‡®ø‡®≤‡®¶‡®æ‡•§ if we can't use [- we use su username] we login to a already login user but not get seprate shell. 

we can't logout until we login into particular shell every user has its particular shell in which he/she login.logout ‡®Ü‡®™‡®æ shell ‡®§‡©ã ‡®ï‡®∞‡®¶‡©á but we can exit in shell anywhere without login Bcoz exit mean exit.To login in particular user shell use [su - username] not with [su username (with this we can't ligin)]. ‡®ú‡®ø‡©∞‡®®‡®æ time we doesnt login with su - username ‡®â‡®¶‡©ã‡®Ç ‡®§‡©±‡®ï we can't goto this username home directory ‡®§‡©á bcoz ‡®Ü‡®™‡®æ - ‡®§‡©ã ‡®¨‡®ø‡®®‡®æ login ‡®®‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡©á ‡®á‡®∏ ‡®≤‡®à ‡®Ü‡®™‡®æ - ‡®§‡©ã‡®Ç ‡®™‡®π‡®ø‡®≤‡®æ ‡®ú‡®ø‡®π‡©ú‡©á user ‡®§‡©ã login ‡®∏‡©Ä ‡®â‡®∏‡®¶‡©Ä home directory ‡®µ‡®ø‡©±‡®ö ‡®π‡©Ä ‡®∞‡®π‡®ø ‡®ú‡®æ‡®Ç‡®¶‡©á‡•§exit ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ shell exit ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®ï‡®ø‡®â‡®ï‡®ø ‡®Ü‡®™‡®æ ‡®ï‡®ø‡®∏‡©á ‡®¶‡©Ç‡®ú‡©á user ‡®®‡©Ç‡©∞ logout ‡®®‡®π‡©Ä ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á‡•§ ‡®ú‡®ø‡©∞‡®®‡®æ‡®Ç time we don't physically login a user ‡®â‡®¶‡©ã‡®Ç ‡®§‡©±‡®ï ‡®â‡®∏ new user ‡®¶‡©Ä profile ‡®®‡®π‡©Ä ‡®¨‡®£‡®¶‡©Ä‡•§

Desktop, Download etc ‡®®‡®π‡©Ä‡®Ç ‡®¨‡®£‡®¶‡©á‡•§

___________________________________

üî¥Softlink vs Hardlink?

üîµSoftlink

windows ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®æ shortcut ‡®¨‡®£‡©ã‡®®‡©á ‡®ï‡®ø‡®∏‡©á program ‡®¶‡®æ ‡®â‡®∏‡®®‡©Ç‡©∞ shortcut(link) ‡®ï‡®π‡®ø‡©∞‡®¶‡©á‡•§

*The [ln -s] command create a softlink, which is also called a "symbolic link"

*A softlink is not a regular file, but a special type of file that point to an existing file or directory.

*Softlinks have some advantages over hardlinks

*Can link two files on different file systems

*Can point to directory or special file, not just a regular file

*When the original regular file gets deleted ,the soft link still point to the file but the target is gone.

*A softlink pointing to a missing file caled a "dangling soft link"

üîµ Hardlink

{every file is single hardlink}

*Every file starts with a single hard link, from its initial name to the data on the file system.

*Use [ln] command to create a new hardlink(another name) that points to an existing file.

*Create a new hardlink to a file, you create another name that points to that same data.

*The new hardlink acts exactly like the original file name.

*Once created you cannot tell the difference between the new hardlink and the original name of the file.

*It reports is each file's link count, the number of hardlinks the file has.

*The command needs atleast two argument, a ptah to the existing file, and the path to the hardlink that you want to create.

*If you want to find out whether two files are hardlinks of each other, one way is to use the -i option with the ls command to list the file  inonde number.

NOTE: All hardlinks that reference the same file will have the same link count, access permission, user and group ownerships,time stamps and file content.

Each hardlink points to the same data on the storage device.

Even if the original file get deleted, the content of the file are still available as long as at least one hardlink exists.

Data is only deleted from storage when the last hard link is deleted.

___________________________________

üî¥File system hierarchy

[ls] run ‡®ï‡®∞‡®¶‡©á ‡®ö‡©±‡®≤ ‡®™‡©à‡®Ç‡®¶‡©Ä command ‡®§‡©á ‡®á‡®∏‡®¶‡®æ path ‡®π‡©à [usr/bin/ls] system ‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ ‡®µ‡©Ä [ls] ‡®ï‡®ø‡©±‡®•‡©á ‡®π‡©à (location)‡•§ ‡®π‡®∞ command ‡®¶‡®æ environmental path ‡®π‡©Å‡©∞‡®¶‡®æ (path ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ environmental path ‡®µ‡©Ä environmen ‡®µ‡®ø‡©±‡®ö run ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®ï‡®∞‡®®‡®æ{environment ‡®µ‡®ø‡©±‡®ö ‡®ú‡©ã ‡®ï‡©Å‡®ù ‡®µ‡©Ä ‡®ö‡©±‡®≤ ‡®∞‡®ø‡®π‡®æ ‡®π‡©à {program execute ‡®π‡©ã ‡®∞‡®ø‡®π‡®æ}‡®â‡®π ‡®á‡®∏‡©á ‡®¶‡©á through ‡®π‡©Ä ‡®ö‡©±‡®≤‡®¶‡®æ)‡•§we can check path by [echo $PATH] ‡®π‡®∞ command system ‡®è‡®•‡©ã‡®Ç  run ‡®ï‡®∞‡®¶‡®æ {‡®á‡®∏ command ‡®¶‡©á output ‡®ö ‡®≤‡®ø‡®ñ‡®ø‡®Ü ‡®µ‡©Ä system ‡®ï‡®ø‡©±‡®•‡©á ‡®ï‡®ø‡©±‡®•‡©á find/search ‡®ï‡®∞‡©Ç‡®ó‡®æ command}‡•§like windows ‡®µ‡®ø‡©±‡®ö c:programfiles,system32 same $PATH ‡®µ‡®ø‡©±‡®ö path defined ‡®π‡©à ‡®ú‡©ã predefined ‡®π‡©à‡•§

----------------------------------------------------------

üîµThe /usr

installed software,shared libraries, include files(in linux everything is file), and read-only program data.

The subdirectory include:-

*usr/bin:- user commands(normal)

*usr/sbin:- system administration commands(root)

*usr/local: Locally customiszd software{script file, software etc }

----------------------------------------------------------

/etc: have all the configuration files.

----------------------------------------------------------

/var: variable data specific to the system that should persist b/w boots.files that dynamically changes, such as databases,cache directories, log files, printer-spooled documents,and website content may be found here.

----------------------------------------------------------

/run: runtime data for processes started since the last boot.this includes process id files and lock files, among other things.the content of this directory are recreated on reboot. pendrive ‡®µ‡©Ä run ‡®µ‡®ø‡©±‡®ö ‡®π‡©Å‡©∞‡®¶‡©Ä‡•§

----------------------------------------------------------

/tmp: A world-writeable sapce for temporary files,files which have not been accessed,changed, or modified for 10days are deleted from this directory automatically.

another temporary directory exists, /var/tmp, in which files have not been accessed,changed, or modified in more than 30days are deleted from this directory automatically.

----------------------------------------------------------

/boot: files needed in order to start the boot process.

----------------------------------------------------------

/dev: contains special device files that are used by the system to access hardware.

----------------------------------------------------------

___________________________________

üî¥ Absolute vs Relative path

‡®ï‡®ø‡®∏‡©á ‡®µ‡©Ä location/directory ‡®µ‡®ø‡©±‡®ö ‡®ú‡®æ‡®£ ‡®¶‡©á 2 type ‡®¶‡©á path ‡®π‡©Å‡©∞‡®¶‡©á (i) absolute (ii) relative

the path of a file or directory specify it's unique file system location.

üîµ(i) absolute: ‡®ú‡®¶‡©ã ‡®ï‡©ã‡®à ‡®µ‡©Ä path (/dir) ‡®§‡©ã start ‡®π‡©Å‡©∞‡®¶‡®æ ‡®â‡®π absolute ‡®π‡©Å‡©∞‡®¶‡®æ‡•§

*it is fully qualified name, specifying the files exact location in the file system hierarchy.

*it begins at the root (/) directory and specifies each subdirectory that must be traversed to reach the specific file.

*a path name with a forward (/) slash at the first character is an absolute path name.

üîµ(ii) relative: ‡®ú‡®¶‡©ã ‡®ï‡©ã‡®à ‡®µ‡©Ä path ‡®¨‡®ø‡®®‡®æ‡®Ç (/dir) ‡®§‡©ã current working dir start ‡®§‡©ã ‡®π‡©Å‡©∞‡®¶‡®æ ‡®â‡®π retive ‡®π‡©Å‡©∞‡®¶‡®æ‡•§

*the working directory or current working directory refer to their current location.

*relative path identifies a unique file specifying only the path necessary to reach the file from the working directory.

*a path name anything other than a forward (/) slash as the first character is a relative path name.

___________________________________

üî¥creating, viewing and editing text files üî¥

üîµRedirection output to a File or  Program.

A command running from the shell prompt normally reads it's input from keyboard and send its output to its terminal window.(‡®á‡®π ‡®∏‡®æ‡®∞‡®æ ‡®ï‡©Å‡®ù ‡®Ü‡®™‡®æ use ‡®ï‡®∞‡®¶‡©á ‡®á‡®π ‡®∏‡®≠‡®ï‡©Å‡®ù process ‡®®‡®æ‡®≤ ‡®π‡©Å‡©∞‡®¶‡®æ file descriptor)

*A process uses numbered channels  called file descriptor to get input and send output.

*All proccess start with at least 3 file descriptors.

(i) standard input (channel 0) reads input from the keyboard

(ii) standard output (channel 1) sends normal output the terminal

(iii) standard error (channel 2) sends error messages to the terminal.

