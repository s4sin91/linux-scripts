___________________________________

üî¥Managing local user & groupsüî¥

___________________________________

üîµ Topics

----------------------------------------------------------

1)Describing user & group concepts

2) Gaining super user access

3) Managing local user accounts

4) Managing local group accounts

5) Managing user passwords

----------------------------------------------------------

‚ö´Q).what is user,group & permission?

Ans). System use ‡®ï‡®∞‡®® ‡®≤‡®à (system ‡®µ‡®ø‡©±‡®ö ‡®ï‡©å‡®à ‡®µ‡©Ä ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®® ‡®≤‡®à) we need to make account in system called user account.account create ‡®ï‡®∞‡®® ‡®®‡®æ‡®≤ we get username & password, ‡®§‡©á ‡®á‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ credentials ‡®ï‡®π‡®ø‡©∞‡®¶‡©á‡•§we need credentials to use any system. without credentials ‡®Ü‡®™‡®æ ‡®ï‡®ø‡®∏‡©á ‡®µ‡©Ä system ‡®µ‡®ø‡©±‡®ö login ‡®®‡®π‡©Ä ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á‡•§any individual who is accessing the system is called user. ‡®π‡®∞ user ‡®¶‡©Ä boundary/limitations ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®ú‡®ø‡®∏‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®∞‡®π‡®ø‡®ï‡©á ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®®‡®æ ‡®π‡©Å‡©∞‡®¶‡®æ‡•§

group: Group is a collection of users.for ex 10 users ‡®π‡©à same permission ‡®π‡©à ‡®â‡®π‡®®‡®æ‡®Ç ‡®¶‡©Ä ‡®§‡®æ‡®Ç ‡®Ü‡®™‡®æ ‡®â‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ ‡®á‡©±‡®ï group ‡®¨‡®£‡®æ ‡®ï‡©á ‡®â‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ group ‡®µ‡®ø‡©±‡®ö join ‡®ï‡®∞ ‡®¶‡©á‡®µ‡©á‡®ó‡©á ‡®§‡©á permission assign ‡®ï‡®∞ ‡®¶‡©á‡®µ‡®æ‡®Ç‡®ó‡©á‡•§

Permission: ‡®ï‡©å‡®à ‡®µ‡©Ä ‡®ö‡©Ä‡®ú‡®º ‡®ö‡®æ‡®π‡©á ‡®â‡®π ‡®ï‡©å‡®à file, directory,command,software ‡®π‡©à ‡®â‡®∏‡®®‡©Ç‡©∞ access ‡®ï‡®∞‡®® ‡®≤‡®à we need permission.

POINTS:

*A user account is used to provide security boundaries b/w different people & programs that can run commands.

*Users have user names to identify them to human users and make them easier to work with. 

*The system distinguishes user accounts by the UIN(unique identification number) assigned to them, the user id or UID

*Every process (running program) on the system runs as a particular user.

*Every file has a particular user as it's owner.

----------------------------------------------------------

‚ö´Q).types of users?

Ans).3type ‡®π‡©Å‡©∞‡®¶‡©á user ‡®¶‡©á‡•§

(i)superuser (root)

(ii) system users(‡®ú‡®¶‡©ã ‡®µ‡©Ä program install ‡®ï‡®∞‡®¶‡©á ‡®¨‡®π‡©Å‡®§ ‡®∏‡®æ‡®∞‡©á system account ‡®™‡®π‡®ø‡®≤‡®æ ‡®§‡©ã ‡®¨‡®£‡©á ‡®π‡©Å‡©∞‡®¶‡©á‡•§ ‡®ï‡©ã‡®à ‡®µ‡©Ä program install ‡®ï‡®∞‡®¶‡©á ‡®â‡®¶‡©ã‡®Ç create ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡®æ)

(iii) regular users(when we create user ‡®§‡®æ‡®Ç regular user ‡®¨‡®£‡®¶‡®æ)

(i) superuser account: the superuser account is for administration of the system.

the name of the superuser is root and the account has UID0.

the superuser has full access to the system. 

(ii) system user account: system ‡®µ‡®ø‡©±‡®ö ‡®¨‡®π‡©Å‡®§ ‡®∏‡®æ‡®∞‡©Ä‡®Ü‡®Ç ‡®ê‡®µ‡©á‡®Ç ‡®¶‡©Ä‡®Ü ‡®ö‡©Ä‡®ú‡®º‡®æ‡®Ç ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü‡®Ç ‡®ú‡®ø‡©∞‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ run ‡®ï‡®∞‡®® ‡®≤‡®à service account ‡®¶‡©Ä ‡®≤‡©ã‡©ú ‡®™‡©à‡®Ç‡®¶‡©Ä ‡®π‡©à‡•§the system has system user account which are used by process that provide supporting services.these processes or deamons usually do not need to run as the superuser(‡®π‡®∞ proccess ‡®®‡©Ç‡©∞ run ‡®ï‡®∞‡®® ‡®≤‡®à).users do not interactively login using a system user account(‡®ï‡©Å‡©±‡®ù ‡®ö‡©Ä‡®ú‡®º‡®æ‡®Ç ‡®¨‡®ø‡®®‡®æ‡®Ç root user ‡®¶‡©Ä previlege ‡®¶‡©á ‡®ö‡©±‡®≤ ‡®ú‡®æ‡®Ç‡®¶‡©Ä‡®Ü‡®Ç ‡®§‡©á ‡®á‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ system user account ‡®ï‡®π‡®ø‡©∞‡®¶‡©á ‡®§‡©á ‡®á‡®∏ ‡®®‡®æ‡®≤ ‡®Ü‡®™‡®£‡®æ ‡®ï‡©∞‡®Æ ‡®ö‡©±‡®≤ ‡®ú‡®æ‡®Ç‡®¶‡®æ)

(iii) regular user: most users have regular user accounts which they used for day-to-day work.like system users, regular users have limited access to the system.the id command to show information about the currently logged in user.

----------------------------------------------------------

‚ö´Q).User configuration file?

Ans).each line in the /etc/passwd file contains information about one user. it is divided up into seven colon-seprated fields.

(i) username for this user(user01)

(ii)the users password used to be stored here in encrypted format.that has been moved to the /etc/shadow file.this field should always be x(x ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®á‡®π link ‡®π‡©à /etc/shadow ‡®®‡®æ‡®≤ , ‡®á‡®∏‡®¶‡©Ä info update ‡®π‡©Å‡©∞‡®¶‡©Ä shadow file ‡®ö).

(iii)the uid number for this user account.

(iv)the gid number for this user account's primary group.

(v)the real name/display name/comment name for this user (User One).

(vi)the home dir for this user /home/user01.

(vii)/bin/bash

‡®á‡®π entries ‡®ú‡©ã default ‡®π‡©à, ‡®á‡®π /etc/default/useradd, we can access it by useradd -D also.

/etc/shells: list of all shells.

/etc/skel: ‡®á‡®π ‡®â‡®π dir ‡®π‡©à ‡®ú‡®ø‡©±‡®•‡©á default files ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü like- bashrc ‡®ú‡®æ ‡®ï‡©ã‡®à ‡®π‡©ã‡®∞ files for new user ‡®¶‡©Ä home dir ‡®µ‡®ø‡©±‡®ö copy ‡®π‡©ã‡®£‡®ó‡©Ä‡®Ü‡®Ç‡•§files here are hidden.

----------------------------------------------------------

‚ö´Q).what is group?

Ans).a group is a collection of users that need to share access to files and other system resources.[groupadd] command ‡®¶‡®æ use ‡®π‡©Å‡©∞‡®¶‡®æ ‡®§‡©ã create group.

Groups can be used to grant access to files to a set of users instead of just a single user.

The groups have group names to make them easier to work with.

Internally system distinguishes groups by the unique identification number assigned to them,the group id or GID.

By default, system use the etc/group file to store info about local groups ().

Each line in the etc/group file contains information about one group.

Each group entry is divided into 4 colon-seprated fields.

(i) group name for this group.

(ii)obsolete group password field, this filed should always be x.etc/gshadow file used to store password.

(iii)the GID number for this group.

(iv)a list of user who are member for this group as secondary/supplementary group(user01,user02,user03).

Primary and supplementary/secondary group.

‡®Ü‡®™‡®æ secondary group ‡®¨‡®£‡®æ‡®â‡®£‡©á ‡®§‡©á ‡®ú‡®¶‡©ã ‡®Ü‡®™‡®æ user create ‡®ï‡®∞‡®¶‡©á ‡®â‡®∏ time primary group automatically create ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡®æ.

----------------------------------------------------------

‚ö´Q). interactive & non interactive shell?

Ans). interactive shell ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®ú‡®ø‡®∏ ‡®¶‡®æ use ‡®ï‡®∞‡®ï‡©á ‡®Ü‡®™‡®æ system ‡®µ‡®ø‡©±‡®ö interaction ‡®ï‡®∞‡®¶‡©á commands ‡®¶‡®æ use ‡®ï‡®∞‡®¶‡©á‡•§ /bin/bash is interactive

non-interactive shell ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®Ü‡®™‡®æ interaction, ‡®§‡©á commands ‡®®‡®π‡©Ä‡®Ç run ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á /sbin/nologin is non-interactive shell. ‡®á‡®π service account ‡®µ‡®ø‡©±‡®ö use ‡®ï‡®∞‡®¶‡©á ‡®§‡©á ‡®á‡®π system ‡®µ‡®ø‡©±‡®ö login ‡®®‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡©á‡•§

----------------------------------------------------------

‚ö´Q). Permission table in linux & permission effects

r: if ‡®®‡®π‡©Ä ‡®¶‡®ø‡©±‡®§‡©Ä to dir ‡®§‡®æ‡®Ç we can't list it's content.use ls‡•§

w: if ‡®®‡®π‡©Ä ‡®¶‡®ø‡©±‡®§‡©Ä to dir ‡®§‡®æ‡®Ç we can't create file/dir inside it.

e: if ‡®®‡®π‡©Ä ‡®¶‡®ø‡©±‡®§‡©Ä to dir ‡®§‡®æ‡®Ç we can't go inside it.

0	    ---	       No permission1	    --x	       Execute

2     -w-	       Write

3	    -wx	      Write and execute

4	    r--	        Read

5	    r-x	                   Read and execute

6	    rw-	                 Read and write

7	    rwx	     Read, write, and execute

----------------------------------------------------------

‚ö´Q). ls command output details

(i)

(ii)

(iii) user owner(primary group)

(iv) group owner (secondary/ supplementary group

----------------------------------------------------------

üî¥‚ö´Q).Default/initial/effective & special permissions?

Default or initial permission:  if root ‡®ï‡©å‡®à file create ‡®ï‡®∞‡©á‡®ó‡®æ ‡®§‡®æ‡®Ç ‡®Ö‡©±‡®° permission, folder create ‡®ï‡®∞‡©á‡®ó‡®æ ‡®§‡®æ‡®Ç ‡®Ö‡©±‡®° permission and if regular user file create ‡®ï‡®∞‡©á‡®ó‡®æ ‡®§‡®æ‡®Ç ‡®Ö‡©±‡®° permission, folder create ‡®ï‡®∞‡©á‡®ó‡®æ ‡®§‡®æ‡®Ç ‡®Ö‡©±‡®° permission. ‡®á‡®π initial permission umask ‡®§‡©á depend ‡®ï‡®∞‡®¶‡©Ä ‡®π‡©à‡•§if we change default value of umask, initial/default permissions will change‡•§ root & regular user ‡®¶‡®æ umask diffrent ‡®π‡©Å‡©∞‡®¶‡®æ‡•§

root ‡®¶‡®æ 0022 regular user ‡®¶‡®æ 0002.

( ‡®á‡®π divide ‡®π‡©Å‡©∞‡®¶‡®æ first 0 special permissions ‡®π‡©Å‡©∞‡®¶‡©Ä,2nd 0 user, 3rd 0 group, 4th other)‡•§The system default permission values are 777 ( rwx-rwx-rwx ) for folders and 666 ( rw-rw-rw- ) for files.‡®Ü‡®™ maximum permission ‡®¶‡©á ‡®∏‡®ï‡®¶‡©á 777(r+w+x)‡•§folder ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö 7(r+w+e) ‡®ï‡®ø‡®â ‡®¶‡®ø‡©∞‡®¶‡©á bcoz execute allows you to enter the directory (i.e., cd into it), and to access any of its files. file ‡®§‡©á 666(r+w=6)‡•§ ‡®§‡©á initial ‡®á‡®π‡®®‡®æ‡®Ç ‡®ö‡©ã for ex in folder ex 777-022= 755(r,e,e)‡®π‡©ã‡®ú‡©Ç‡•§ for file maximum permission ‡®π‡©Å‡©∞‡®¶‡©Ä 666{execute ‡®µ‡©Ä ‡®π‡©Å‡©∞‡®¶‡©Ä,but by default security reasons ‡®ï‡®∞‡®ï‡©á execute permission ‡®®‡®π‡©Ä ‡®¶‡®ø‡©∞‡®¶‡©á bcoz we dont want file to execute }(r+w) ‡®§‡©á intial ‡®π‡©ã‡®ä‡®ó‡©Ä 666-022=644(r+w,r,r)‡®π‡©ã‡®ú‡©Ç‡•§ ‡®á‡®π ‡®¶‡©ã example root ‡®≤‡®à ‡®∏‡©Ä ‡®ê‡®µ‡©á ‡®π‡©Ä regular user ‡®≤‡®à ‡®π‡©ã‡®ä‡®ó‡©Ä umask-permission‡•§

change umask:- ‡®á‡®π ‡®∏‡®æ‡®∞‡©Ä info /etc/bashrc file ‡®µ‡®ø‡©±‡®ö ‡®π‡©Å‡©∞‡®¶‡©Ä for change it to all users but if we want to change for it for specific user then we can do it by .bashrc file inside home dir of specific user

Special/advance permissions: ‡®á‡®π 3 types ‡®¶‡©Ä ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü, ‡®§‡©á ‡®á‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ ‡®Ü‡®™‡®æ ‡®á‡®π‡®®‡®æ‡®Ç ‡®§‡©á ‡®≤‡®æ‡®â‡®Ç‡®¶‡©á/‡®®‡®æ‡®≤ use ‡®ï‡®∞‡®¶‡©á‡•§

##SUID & SGID ‡®µ‡®ø‡©±‡®ö s ‡®õ‡©ã‡®ü‡®æ ‡®§‡®æ‡®Ç execute permission ‡®µ‡©Ä ‡®π‡©à if S is ‡®µ‡©±‡®°‡®æ ‡®§‡®æ‡®Ç ‡®®‡®π‡©Ä ‡®π‡©à‡•§

(i)SUID(super user identification)= user‡•§ ‡®á‡®π ‡®ï‡®ø‡®∏‡©á file ‡®§‡©á ‡®≤‡®ó‡®æ‡®â‡®£ ‡®®‡®æ‡®≤‡®º ‡®â‡®π file ‡®ê‡®µ‡©á execute ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®ú‡®ø‡®µ‡©á‡®Ç ‡®â‡®∏‡®¶‡©á owner ‡®®‡©á ‡®â‡®∏‡®®‡©Ç‡©∞ execute ‡®ï‡©Ä‡®§‡®æ ‡®π‡©ã‡®µ‡©á‡•§(4)

[chmod u+s fileName#set SUID]

[chmod 4766 fileName#set SUID]

[chmod u-s fileName#disable SUID]

(ii)SGID(super group identification)=  group‡•§ ‡®ï‡®ø‡®∏‡©á directory ‡®§‡©á ‡®≤‡®ó‡®æ‡®â‡®£ ‡®®‡®æ‡®≤ ‡®â‡®∏ directory ‡®¶‡©á ‡®Ö‡©∞‡®¶‡®∞ ‡®¶‡©Ä files ‡®π‡©à ‡®â‡®π‡®®‡®æ‡®Ç ‡®¶‡®æ ‡®ú‡©ã group ‡®π‡©à/owner ‡®π‡©à ‡®â‡®π ‡®â‡®π‡©Ä ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡®æ ‡®ú‡©ã ‡®â‡®∏ particular directory ‡®¶‡®æ group ‡®π‡©à‡•§(2)

[chmod g+s dirName#set SGID]

[chmod 2766 dirName#set SGID]

[chmod g-s dirName#disable SGID]

(iii)sticky bit= others‡•§‡®ï‡®ø‡®∏‡©á directory ‡®§‡©á sticky bit ‡®≤‡®ó‡®æ‡®â‡®£ ‡®®‡®æ‡®≤ ‡®â‡®∏ directory ‡®µ‡®ø‡©±‡®ö user ‡®∏‡®ø‡®∞‡®´ ‡®Ü‡®™‡®£‡©Ä file delete ‡®ï‡®∞ ‡®™‡®æ‡®â‡®Ç‡®¶‡®æ ‡®ï‡®ø‡®∏‡©á ‡®¶‡©Ç‡®ú‡©á ‡®¶‡©Ä ‡®®‡®π‡©Ä‡®Ç‡•§ we use it as protective layer.(1)

[chmod +t dirName#set sticky]

[chmod 1766 dirName#set sticky]

[chmod -t dirName#disable sticky]

‚ö´ACL(Access control list) ifexplicitly/exclusively ‡®ï‡®ø‡®∏‡©á particular user [user1] ‡®®‡©Ç‡©∞ r+w ‡®§‡©á ‡®¶‡©Ç‡®ú‡©á user [user2] ‡®®‡©Ç‡©∞ r on same file ‡®®‡®æ‡®Ç ‡®π‡©Ä ‡®á‡®∏‡®®‡©Ç‡©∞ group ‡®µ‡®ø‡©±‡®ö add ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®®‡®æ‡®Ç ‡®π‡©Ä ‡®â‡®∏‡®®‡©Ç‡©∞ other user bcoz ‡®´‡®ø‡®∞ ‡®∏‡®æ‡®∞‡®ø‡®Ü‡®Ç ‡®®‡©Ç‡©∞ access ‡®Æ‡®ø‡©±‡®≤ ‡®ú‡®æ‡®ä‡®ó‡®æ, ‡®§‡®æ‡®Ç in this case we use ACL.with ACL we can define specific permissions for specific user. getfacl ‡®®‡®æ‡®≤ ‡®Ü‡®™‡®æ check ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ACL, ‡®§‡©á ‡®á‡®∏‡®¶‡©á output ‡®µ‡®ø‡©±‡®ö mask ‡®Ü ‡®∞‡®ø‡®π‡®æ ‡®π‡©ã‡®ä‡®ó‡®æ‡•§mask decide ‡®ï‡®∞‡®¶‡®æ ‡®ï‡®ø‡®∏‡©á user ‡®¶‡©Ä effective permission ‡®®‡©Ç‡©∞ ‡®ú‡©ã user ACL ‡®µ‡®ø‡©±‡®ö ‡®π‡©à‡•§ we can change mask with [ setfacl -m u:linux:4 file.txt ]

Maskconcept detail:- whenever we execute setfacl ‡®§‡®æ‡®Ç ‡®π‡®∞ ‡®µ‡®æ‡®∞‡©Ä ‡®á‡®π check ‡®ï‡®∞‡®¶‡®æ ‡®µ‡©Ä maximum value ‡®ï‡®ø‡©∞‡®®‡©Ä ‡®π‡©à ‡®ú‡©ã ‡®Ü‡®™‡®æ user ‡®®‡©Ç‡©∞ ‡®¶‡®ø‡©±‡®§‡©Ä ‡®π‡©à ‡®§‡©á ‡®á‡®∏ command ‡®µ‡®ø‡©±‡®ö ‡®ï‡®ø‡©∞‡®®‡©Ä ‡®¶‡®ø‡©±‡®§‡©Ä ‡®π‡©à‡•§ for ex ‡®™‡®π‡®ø‡®≤‡©Ä comnand ‡®µ‡®ø‡©±‡®ö read ‡®¶‡®æ access ‡®¶‡®ø‡©±‡®§‡®æ, ‡®Ö‡®ó‡®≤‡©Ä comnand ‡®µ‡®ø‡©±‡®ö read, write ‡®¶‡®æ access ‡®¶‡®ø‡©±‡®§‡®æ‡•§mask ‡®¶‡©Ä value ‡®™‡®π‡®ø‡®≤‡®æ ‡®∏‡©Ä read ‡®§‡©á ‡®Ö‡®ó‡®≤‡©Ä ‡®µ‡®æ‡®∞ ‡®ú‡®ø‡®µ‡©á‡®Ç ‡®π‡©Ä read,write ‡®¶‡®æ access ‡®¶‡®ø‡©±‡®§‡®æ ‡®§‡®æ‡®Ç mask ‡®¶‡©Ä value ‡®π‡©ã ‡®ó‡®à read,write‡•§mask ‡®á‡®π check ‡®ï‡®∞‡®¶‡®æ ‡®∞‡®π‡®ø‡©∞‡®¶‡®æ ‡®µ‡©Ä maximum permission ‡®ï‡®ø‡®∏ level ‡®§‡©±‡®ï ‡®ó‡®à ‡®π‡©à‡•§if we use setfacl command again ‡®á‡®∏ ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®æ read,write, execute ‡®¶‡®æ access ‡®¶‡©á ‡®¶‡®ø‡©±‡®§‡®æ

 ‡®ï‡®ø‡®∏‡©á ‡®®‡©Ç‡©∞ ‡®§‡®æ‡®Ç mask ‡®¶‡©Ä value ‡®π‡©ã ‡®ú‡®æ‡®ä‡®ó‡©Ä read,write, execute‡•§ if we want to add user in ACL without changing/modify mask ‡®§‡®æ‡®Ç we can use flag [--no-mask]

___________________________________

‚ö´ System & user profile files

(System profile file) 

 important files:

(i) /etc/inputrc: 

(ii) /etc/bashrc:

(iii) /etc/profile:‡®á‡®π ‡®∏‡®æ‡®∞‡©á system ‡®≤‡®à same ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®Æ‡®§‡®≤‡®¨ settings, var,allise,functions, environment settings globally ‡®∏‡®≠ user ‡®≤‡®à ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®¶‡©Ä ‡®π‡©à‡•§ For ex: /etc/profile ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö $PATH var define/set ‡®π‡©Å‡©∞‡®¶‡®æ‡•§

(User profile file) different user ‡®≤‡®à ‡®Ö‡©±‡®° ‡®Ö‡©±‡®° ‡®π‡©Å‡©∞‡®¶‡©Ä‡•§

important files:

(i). profile: /etc/profile globally ‡®ï‡©∞‡®Æ ‡®ï‡®∞ ‡®∞‡®π‡©Ä ‡®π‡©à ‡®§‡©á ‡®á‡®π user ‡®¶‡©á ‡®π‡®ø‡®∏‡®æ‡®¨ ‡®≤‡®à ‡®ï‡©∞‡®Æ ‡®ï‡®∞ ‡®∞‡®π‡©Ä ‡®π‡©à‡•§ important ‡®ï‡©∞‡®Æ ‡®á‡®π ‡®®‡©á ‡®á‡®∏ file ‡®¶‡©á .bashrc ‡®®‡©Ç‡©∞ source ‡®ï‡®∞‡®®‡®æ ‡®§‡©á, $HOME ‡®®‡©Ç‡©∞ path var ‡®§‡©á add ‡®ï‡®∞‡®®‡®æ‡•§it execute only one time when we login. 

___________________________________
