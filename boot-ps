___________________________________

üî¥ Booting process of RHEL8

Linux ‡®¶‡©á ‡®¨‡®π‡©Å‡®§ flavours ‡®π‡©à ‡®§‡©á ‡®ï‡®à ‡®µ‡®æ‡®∞ diffrent flavours ‡®ï‡®∞‡®ï‡©á booting process ‡®•‡©ã‡©ú‡®æ change ‡®µ‡©Ä ‡®π‡©ã ‡®∏‡®ï‡®¶‡©Ä ‡®π‡©à but in this session we only discuss RHEL8 booting process.

‚ö´ BIOS is firmware ‡®Æ‡®§‡®≤‡®¨ combination of hardware & software

‚ö´ Q).what is booting?

Ans). The process of copying the files of OS on RAM from HardDisk . ‡®á‡®π files [copy ‡®π‡©ã ‡®∞‡®π‡©Ä‡®Ü‡®Ç] /boot partition{/boot directory} ‡®µ‡®ø‡©±‡®ö store ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü‡•§ ‡®á‡®π files sequence ‡®µ‡®ø‡©±‡®ö load ‡®π‡©Å‡©∞‡®¶‡®ø‡®Ü‡®Ç in RAM and then allow us to use the system  after loading all the services and OS components is called booting process.when ‡®Ü‡®™‡®æ press ‡®ï‡®∞‡®¶‡©á power button ‡®®‡©Ç‡©∞ electric current ‡®∏‡®æ‡®∞‡©á components ‡®µ‡®ø‡®ö ‡®ú‡®æ‡®Ç‡®¶‡®æ‡•§current Motherboard ‡®µ‡®ø‡©±‡®ö BIOS [Basic Input Output System]  ‡®®‡®æ‡®Æ ‡®¶‡©Ä chip ‡®µ‡®ø‡©±‡®ö ‡®ú‡®æ‡®Ç‡®¶‡®æ‡•§ BIOS POST[Power On Self Test] operation ‡®®‡©Ç‡©∞ execute ‡®ï‡®∞‡®¶‡®æ‡•§BIOS ‡®µ‡®ø‡©±‡®ö ‡®á‡©±‡®ï program ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ú‡®ø‡®π‡©ú‡®æ firmware ‡®π‡©Å‡©∞‡®¶‡®æ, BIOS as a combination ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®¶‡®æ Hardware & Software ‡®¶‡®æ‡•§BIOS ‡®µ‡®ø‡©±‡®ö POST operation ‡®≤‡®à ‡®á‡©±‡®ï program ‡®π‡©Å‡©∞‡®¶‡®æ‡•§BIOS chip ‡®á‡®π check ‡®ï‡®∞‡®¶‡©Ä ‡®µ‡©Ä ‡®∏‡®æ‡®∞‡©á ‡®∏‡®æ‡®∞‡©á components ‡®ú‡©ã ‡®Ü‡®™‡®£‡©á machine ‡®®‡®æ‡®≤ attached ‡®π‡©à ‡®â‡®π proper working condition ‡®µ‡®ø‡©±‡®ö ‡®π‡©à ‡®ú‡®æ‡®Ç ‡®®‡®π‡©Ä‡®Ç‡•§ ‡®á‡®∏ check ‡®≤‡®à BIOS POST operation ‡®®‡©Ç‡©∞ execute ‡®ï‡®∞‡®¶‡©Ä ‡®π‡©à‡•§if all the components are in working condition(BIOS POST run ‡®ï‡®∞‡®¶‡®æ ‡®§‡©á POST signal send ‡®ï‡®∞‡®¶‡®æ BIOS ‡®®‡©Ç‡©∞ all components are in working condition or not if not ‡®§‡®æ‡®Ç ‡®Ü‡®™‡®£‡©Ä machine boot ‡®π‡©Ä ‡®®‡®π‡©Ä‡®Ç ‡®π‡©ã‡®£‡©Ä) then (BIOS) ‡®á‡®π ‡®Ü‡®µ‡®¶‡®æ control MBR [Master Boot Record] ‡®®‡©Ç‡©∞ ‡®¶‡©á ‡®¶‡®ø‡©∞‡®¶‡©Ä ‡®π‡©à‡•§if problem ‡®π‡©à ‡®§‡®æ‡®Ç multiple beep sounds ‡®π‡©ã‡®£ ‡®≤‡©±‡®ó ‡®ú‡®æ‡®Ç‡®¶‡©á, beep ‡®¶‡©á different ports ‡®π‡©Å‡©∞‡®¶‡©á ‡®ú‡®ø‡®∏ ‡®®‡®æ‡®≤ ‡®™‡®§‡®æ ‡®≤‡©±‡®ó ‡®ú‡®æ‡®Ç‡®¶‡®æ ‡®ï‡©Ä ‡®ï‡©Ä problem ‡®π‡©à‡•§

More about BIOS:

it is chip present in Motherboard IC.

BIOS is read only memory.BIOS is a combination of both Hardware and software.‡®á‡®∏ ‡®µ‡®ø‡©±‡®ö program ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ú‡©ã as a firmware ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®¶‡®æ‡•§ ‡®á‡©±‡®•‡©á ‡®Ü‡®™‡®æ limited changes ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á in BIOS. CMOS ‡®µ‡®ø‡©±‡®ö BIOS ‡®¶‡©Ä settings store ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§CMOS is powered by a small battery. today UEFI is used and it is advance version of BIOS. UEFI ‡®ú‡®ø‡®Ü‡®¶‡®æ flexibility provide ‡®ï‡®∞‡®¶‡®æ‡•§in UEFI ‡®Ü‡®™‡®æ ‡®ú‡®ø‡®Ü‡®¶‡®æ changes ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á, easily manage settings & ‡®á‡©±‡®•‡©á mouse ‡®¶‡®æ ‡®µ‡©Ä support ‡®Æ‡®ø‡®≤‡®¶‡®æ‡•§

‚ö´ Q). MBR?

Ans).BIOS POST operation execute ‡®π‡©ã‡®£ ‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ MBR ‡®®‡©Ç‡©∞ search ‡®ï‡®∞‡®¶‡®æ ‡®§‡©á MBR ‡®®‡©Ç‡©∞ control ‡®¶‡©á ‡®¶‡®ø‡©∞‡®¶‡®æ‡•§ ‡®á‡©±‡®•‡©á BIOS ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®æ select ‡®ï‡®∞ ‡®∏‡©±‡®ï‡®¶‡©á booting device (select boot device in:HDD,LAN,CD/DVD,USB, HBA card)‡•§‡®ú‡®ø‡©±‡®•‡©á ‡®µ‡©Ä ‡®Ü‡®™‡®£‡©Ä booting device ‡®π‡©ã‡®ä‡®ó‡©Ä (USB,CD/DVD)‡®â‡©±‡®•‡©á ‡®â‡®∏ ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö BIOS MBR ‡®®‡©Ç‡©∞ search ‡®ï‡®∞‡®¶‡®æ‡•§MBR ‡®Æ‡®ø‡®≤‡®£ ‡®§‡©ã‡®Ç ‡®¨‡®æ‡®Ö‡®¶ BIOS MRB ‡®®‡©Ç‡©∞ control ‡®¶‡©á ‡®¶‡©á‡®ä‡®ó‡®æ‡•§MBR ‡®Ü‡®™‡®£‡©Ä booting device ‡®¶‡©á first sector ‡®µ‡®ø‡©±‡®ö store ‡®π‡©Å‡©∞‡®¶‡®æ & ‡®á‡®∏‡®¶‡©Ä (MBR ‡®¶‡©Ä) size 512 bytes ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§ ‡®á‡®π 512bytes ‡®µ‡©Ä divided ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à‡•§

----------------------------------------------------------

440bytes(code):code ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®á‡®π sector information ‡®∞‡©±‡®ñ‡®¶‡®æ bootloader ‡®¶‡©Ä‡•§ ‡®á‡©±‡®•‡©á primary bootloader ‡®¶‡©Ä information ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à it is not main bootloader. It only keeps(‡®á‡®∏‡®¶‡©á ‡®Ö‡©∞‡®¶‡®∞) the sector information regarding the main bootloader. Main bootloader is GRUB2, /boot directory ‡®Ö‡©∞‡®¶‡®∞ grub2 ‡®®‡®æ‡®Ç‡®Æ ‡®¶‡®æ bootloader(aslo known as main bootloader) ‡®π‡©à ‡®â‡®∏‡®¶‡©Ä sector information ‡®π‡©à ‡®â‡®π ‡®á‡©±‡®•‡©á store ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§ ‡®§‡©á ‡®á‡®π point ‡®ï‡®∞‡®¶‡®æ grub2 / main bootloader ‡®®‡©Ç‡©∞‡•§

4bytes (Disk signature):

2bytes (Nuts): null ‡®≤‡®à ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§

64bytes (Partition table): ‡®á‡®π 16bytes ‡®π‡®∞ primary partition ‡®≤‡®à reserved ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à ‡®¶‡©Ä  total 64bytes. ‡®á‡®∏ ‡®≤‡®à total 4 ‡®π‡©Ä primary partition support ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à ‡®ï‡®ø‡®∏‡©á ‡®µ‡©Ä disk ‡®µ‡®ø‡©±‡®ö ‡®ú‡©à ‡®Ü‡®™‡®æ MBR disk use ‡®ï‡®∞‡®¶‡©á ‡®ú‡®æ ‡®´‡®ø‡®∞ simple BIOS use ‡®ï‡®∞ ‡®∞‡®π‡©á‡•§ Why 4 bcoz 16bytes ‡®π‡®∞ primary partition ‡®≤‡®à reserved ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à in MBR(total is 64bytes)‡•§

2bytes(MBR signature): ‡®á‡®π MBR signature ‡®≤‡®à reserved ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à‡•§

‡®¨‡®æ‡®ï‡©Ä sectors ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®æ data ‡®ú‡®æ booting files ‡®ï‡©Å‡®ù ‡®µ‡©Ä ‡®Ü‡®™‡®æ ‡®∞‡©±‡®ñ ‡®∏‡®ï‡®¶‡©á in our disk.

----------------------------------------------------------

 ‡®á‡®π MBR point ‡®ï‡®∞‡®¶‡®æ grub2 / main bootloader ‡®®‡©Ç‡©∞‡•§

‚ö´ Q). GRUB2?

Ans). GRUB2 [GRAND UNIFIED BOOTLOADER VERSION 2] ‡®á‡®∏‡®¶‡®æ ‡®ï‡©∞‡®Æ ‡®π‡©à kernel ‡®®‡©Ç‡©∞ memory/RAM ‡®µ‡®ø‡©±‡®ö load ‡®ï‡®∞‡©á‡•§ GRUB2 ‡®π‡©Ä ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ GRUB menu provide ‡®ï‡®∞‡®¶‡®æ ‡®ú‡®ø‡©±‡®•‡©á ‡®Ü‡®™‡®æ kernel ‡®®‡©Ç‡©∞ select ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á, ‡®ú‡®ø‡®∏‡®§‡©ã‡®Ç ‡®Ü‡®™‡®æ ‡®Ü‡®™‡®£‡©Ä machine ‡®®‡©Ç‡©∞ boot ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á‡•§for example: ‡®â‡©±‡®•‡©á normal and rescue kernel ‡®¶‡©Ä lines show ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü, if we patch machine there are multiple kernel then ‡®ì‡®•‡©á multiple lines ‡®µ‡©Ä show ‡®π‡©ã‡®£‡®ó‡©Ä‡®Ü‡®Ç‡•§ ‡®á‡®π GRUB menu ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§ GRUB menu ‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®ú‡®ø‡©∞‡®®‡©á ‡®µ‡©Ä kernel ‡®â‡®•‡©á ‡®π‡©à ‡®â‡®π show ‡®π‡©Å‡©∞‡®¶‡©á ‡®ì‡®•‡©á & we can choose there one, to choose 10-15 seconds ‡®π‡©Å‡©∞‡®¶‡©á‡•§

(i) GRUB2 loads its configuration files from /boot/grub2/grub.conf file. ‡®á‡®π main file ‡®π‡©à‡•§

(i) then it provides you the option to select the kernel to boot up your machine in form of boot menu.

(iii) then it loads the selected/default VMLinuz kernel image from /boot/vmlinuz-******.

(iii) and then it extracts the content of initramfs image from /boot/initramfs-**.img load ‡®ï‡®∞‡®¶‡®æ in RAM.

To initialise Hardware we need ‡®¨‡®π‡©Å‡®§ ‡®∏‡®æ‡®∞‡©á drivers, modules ‡®¶‡©Ä ‡®≤‡©ã‡©ú ‡®™‡©à‡®Ç‡®¶‡©Ä ‡®π‡©à‡•§GRUB2 select & loads kernel in memory. Now kernel/Vmlinuz needs drivers, it (VMLinuz) find drivers in initramfs for all hardware initilization. ‡®Ö‡®ú‡©á ‡®§‡©±‡®ï Harddisk initialise ‡®®‡®π‡©Ä ‡®π‡©ã‡®à ‡®π‡©à ‡®™‡©Ç‡®∞‡©Ä ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®Æ‡®§‡®≤‡®¨ ‡®π‡©Å‡®£ GRUB2 load ‡®π‡©ã‡®á‡®Ü ‡®¨‡®æ‡®ï‡©Ä ‡®ú‡©ã hardware ‡®π‡©à ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®µ‡©Ä initialise ‡®ï‡®∞‡®®‡®æ ‡®π‡©à‡•§ ‡®â‡®∏ hardware ‡®®‡©Ç‡©∞ initialise ‡®ï‡®∞‡®® ‡®≤‡®à we need drivers & modules. ‡®â‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ initramfs ‡®¶‡©Ä help ‡®®‡®æ‡®≤ RAM ‡®µ‡®ø‡©±‡®ö load ‡®ï‡®∞ ‡®¶‡®ø‡©±‡®§‡®æ ‡®ú‡®æ‡®Ç‡®¶‡®æ ‡®π‡©à‡•§now kernel trying to mount root filesystem & trying to start systemd process but it requires modules/drivers to do this process, ‡®ú‡©ã ‡®á‡®∏‡®®‡©Ç‡©∞ initramfs img ‡®ú‡©ã extract ‡®π‡©ã‡®ï‡©á RAM ‡®µ‡®ø‡©±‡®ö load ‡®π‡©ã ‡®ó‡®à ‡®π‡©à ‡®â‡®∏‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®Æ‡®ø‡©±‡®≤ ‡®ú‡®æ‡®Ç‡®¶‡©á‡•§ initramfs ‡®µ‡®ø‡©±‡®ö modules & drivers ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à ‡®ú‡®ø‡®∏ ‡®®‡®æ‡®≤ hardware initialise ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡®æ‡•§

 Hardware initilization: ‡®π‡©Å‡®£ kernel ‡®â‡®π ‡®∏‡®æ‡®∞‡©á hardware initialise ‡®ï‡®∞ ‡®¶‡®ø‡®â ‡®ú‡®ø‡®∏‡®¶‡®æ driver & module initramfs ‡®µ‡®ø‡©±‡®ö ‡®π‡©ã‡®ä‡®ó‡®æ‡•§ 

init process: now kernel will start init process (/sbin/init ‡®®‡®æ‡®Æ ‡®¶‡©Ä binary file execute ‡®ï‡®∞‡©Ç‡®ó‡®æ) why init bcoz init ‡®¶‡®æ ‡®π‡©Ä version ‡®π‡©à systemd ‡®π‡©à(RHEL6 ‡®§‡©±‡®ï init use ‡®ï‡®∞‡®¶‡©á ‡®∏‡©Ä RHEL7-8 ‡®µ‡®ø‡©±‡®ö systemd use ‡®π‡©Å‡©∞‡®¶‡©Ä) systemd ‡®≤‡®à ‡®µ‡©Ä system /sbin/init binary ‡®®‡©Ç‡©∞ execute ‡®ï‡®∞‡®¶‡®æ‡•§

(i) init is first process of linux and it is called parent of all the process in linux.it start at the booting of the system & keep running until machine is running & stop at last ‡®™‡®π‡®ø‡®≤‡®æ‡®Ç ‡®á‡®∏‡®¶‡©á child kill ‡®π‡©ã‡®£‡®ó‡©á ‡®´‡®ø‡®∞ ‡®á‡®π (parent) kill ‡®π‡©ã‡®ä‡®ó‡®æ.

(ii) kernel executes /sbin/init from the initramfs as the first process of having process id 1(PID=1)

(iii)on RHEL8, init has been replaced with system & /sbin/init is a softlink to systemd.you can see it by[ ls -l /sbin/init] ‡®á‡®π ‡®è‡®∏‡©á ‡®¶‡®æ shortcut ‡®π‡©à ‡®á‡®∏‡®®‡©Ç‡©∞ execute ‡®ï‡®∞‡®® ‡®¶‡®æ ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®¶‡®æ‡•§

it control the final process of booting & prepare the system for use how ‡®™‡®π‡®ø‡®≤‡®æ ‡®á‡®π process start ‡®π‡©ã‡®ä‡®ó‡©Ä ‡®â‡®∏‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ ‡®á‡®π ‡®¨‡®æ‡®ï‡©Ä ‡®¶‡©Ç‡®ú‡©Ä services start ‡®ï‡®∞‡©Ç‡®ó‡©Ä ‡®§‡©á ‡®¨‡®æ‡®ï‡©Ä OS components ‡®π‡©à ‡®â‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ memory ‡®µ‡®ø‡©±‡®ö load ‡®ï‡®∞‡©Ç‡®ó‡©Ä‡•§

initrd.target: ‡®ú‡®¶‡©ã systemd/init start ‡®π‡©ã ‡®ó‡®à ‡®§‡®æ‡®Ç ‡®â‡®∏‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ ‡®á‡®π(with the help of initramfs Systemd executes all units for the initrd.target ) execute ‡®ï‡®∞‡©á‡®ó‡©Ä initrd.target 

(ii) On RHEL 8, runlevels are called as the targets there are total 7targets (runlevels)present in Linux.

(iii) this includes the mounting of the root filesystem on the disk at  

/sysroot directory ‡®§‡©á temporary basis ‡®≤‡®à mount ‡®π‡©ã‡®ä‡®ó‡®æ‡•§

switching root filesystem: ‡®π‡©Å‡®£ ‡®á‡®π finally switch ‡®π‡©ã ‡®ú‡®æ‡®ä‡®ó‡®æ in root filesystem. Kernel root filesystem switched from initramfs root (sysroot) to system root filesystem ‡®â‡®∏‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ ‡®á‡®π sysroot directory ‡®§‡©ã‡®Ç root directory ‡®§‡©á mount ‡®π‡©ã ‡®ú‡®æ‡®ä‡®ó‡®æ permanently.(OS ‡®µ‡®ø‡©±‡®ö changes ‡®ï‡®∞‡®® ‡®≤‡®à sysroot ‡®¶‡®æ use ‡®π‡©Å‡©∞‡®¶‡®æ,if we want to reset root password ‡®§‡®æ‡®Ç ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®™‡®π‡®ø‡®≤‡®æ sysroot ‡®§‡©á mount ‡®ï‡®∞‡®ï‡©á changes ‡®ï‡®∞‡®¶‡©á) ‡®™‡®π‡®ø‡®≤‡®æ ‡®â‡®π temprary bases ‡®§‡©á sysroot directory ‡®§‡©á mount ‡®π‡©ã ‡®ï‡©á ‡®â‡©±‡®•‡©ã‡®Ç switch ‡®π‡©Å‡©∞‡®¶‡®æ in root directory permanent mount ‡®π‡©ã‡®£ ‡®≤‡®à‡•§

Systemd looks for default.target: ‡®á‡®∏‡®§‡©ã‡®Ç ‡®¨‡®æ‡®Ö‡®¶ systemd ‡®™‡®§‡®æ ‡®ï‡®∞‡®¶‡®æ ‡®µ‡©Ä ‡®Ü‡®™‡®æ default target ‡®ï‡®ø‡®π‡©ú‡®æ set ‡®ï‡©Ä‡®§‡®æ ‡®π‡©à‡•§ ‡®Ü‡®™‡®æ ‡®Ö‡©±‡®° ‡®Ö‡©±‡®° targets(runlevels) use ‡®ï‡®∞‡®¶‡©á ‡®§‡©á ‡®á‡®π depend ‡®ï‡®∞‡®¶‡®æ ‡®µ‡©Ä ‡®Ü‡®™‡®æ ‡®Ü‡®™‡®£‡©Ä machine ‡®ï‡®ø‡®∏ target (runlevels) ‡®§‡©á boot ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®§‡©á default ‡®ú‡©ã ‡®Ü‡®™‡®æ select ‡®ï‡©Ä‡®§‡®æ ‡®â‡®∏‡®§‡©á ‡®Ü‡®™‡®£‡©Ä machine boot ‡®π‡©ã ‡®ú‡®æ‡®â‡®ó‡©Ä‡•§

*Now systemd reexecutes as system version after that systemd looks for the default target & these files decide the runlevels/targets  to bootup the machine.

(i) Systemd reads the file linked by 

/etc/systemd/system/default.target

to determine the default system target (runlevel).systemd ‡®á‡®∏ file ‡®®‡®æ‡®≤ default target search ‡®ï‡®∞‡®¶‡©Ä‡•§ ‡®ú‡©ã ‡®µ‡©Ä file ‡®á‡®∏ ‡®®‡®æ‡®≤ link ‡®π‡©ã‡®ä‡®ó‡©Ä ‡®â‡®π default runlevels ‡®π‡©ã‡®ä‡®ó‡®æ ‡®ú‡®ø‡®∏ ‡®µ‡®ø‡©±‡®ö system boot ‡®π‡©ã‡®ä‡®ó‡®æ‡•§ ‡®á‡®∏‡®®‡©Ç‡©∞ system use ‡®ï‡®∞‡®¶‡®æ determine/‡®™‡®§‡®æ ‡®ï‡®∞‡®® ‡®≤‡®à ‡®µ‡©Ä default target/runlevel ‡®ï‡®ø‡®π‡©ú‡®æ ‡®π‡©à‡•§targets ‡®ï‡®à ‡®∏‡®æ‡®∞‡©á ‡®π‡©à like single user mode ‡®µ‡®ø‡©±‡®ö boot ‡®ï‡®∞‡®®‡®æ,with network boot ‡®ï‡®∞‡®®‡®æ,GUI boot ‡®ï‡®∞‡®®‡®æ,machine reboot ‡®ï‡®∞‡®®‡®æ, ‡®á‡®π ‡®∏‡®æ‡®∞‡©á ‡®Ö‡©±‡®° ‡®Ö‡©±‡®° target/runlevels ‡®π‡©à ‡®§‡©á ‡®á‡®π‡®®‡®æ‡®Ç ‡®≤‡®à ‡®Ö‡©±‡®° ‡®Ö‡©±‡®° files ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü‡®Ç ‡®§‡©á ‡®ï‡®ø‡®π‡©ú‡©Ä file ‡®Ü‡®™‡®æ link ‡®ï‡©Ä‡®§‡©Ä ‡®π‡©à ‡®â‡®π default.target ‡®µ‡®æ‡®≤‡©Ä file ‡®®‡®æ‡®≤ ‡®™‡®§‡®æ ‡®≤‡©±‡®ó ‡®ú‡®æ‡®Ç‡®¶‡®æ ‡®π‡©à‡•§[ to see ls -l /etc/systemd/system/default.target ‡®π‡©Å‡®£ ‡®á‡©±‡®•‡©á link show ‡®π‡©ã‡®ä‡®ó‡®æ]

(i) there are total 7targets(runlevel) available in RHEL8 also which can be used to boot up the machine in different modes as per the requirement.

(ii) we can set the desired target (runlevel) in the system as default target to boot up the machine by using this command[ systemctl set-default graphical.target ]

(iii) to see 7 default target use [ ls -l /lib/systemd/system/runlevel*target]

‡®ú‡®ø‡®π‡©ú‡®æ ‡®µ‡©Ä ‡®Ü‡®™‡®£‡®æ default target set ‡®π‡©ã‡®ä‡®ó‡®æ ‡®â‡®∏ ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®™‡®£‡©Ä machine boot/start ‡®π‡©ã‡®ä‡®ó‡©Ä‡•§ ‡®â‡®∏‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ systemd process ‡®á‡®π ‡®¨‡®æ‡®ï‡©Ä ‡®∏‡®æ‡®∞‡©Ä services ‡®®‡©Ç‡©∞ start ‡®ï‡®∞‡©Ç‡®ó‡©Ä ‡®§‡©á ‡®ú‡®ø‡©∞‡®®‡©á ‡®µ‡©Ä ‡®¶‡©Ç‡®ú‡©á OS components ‡®π‡©à ‡®â‡®π‡®®‡®æ‡®Ç ‡®®‡©Ç‡©∞ memory ‡®µ‡®ø‡©±‡®ö load ‡®ï‡®∞ ‡®¶‡©á‡®â‡®ó‡©Ä ‡®§‡®æ‡®Ç ‡®ú‡®º‡©ã we can use OS‡•§

‚ö´ Q). chicken egg problem?

Ans). chicken egg problem linux ‡®¶‡©Ä booting process ‡®µ‡®ø‡©±‡®ö ‡®π‡©Ä ‡®µ‡©±‡®°‡®æ challenge ‡®π‡©à‡•§ ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ï‡®ø ‡®π‡©à in this problem, ‡®Ü‡®™‡®£‡®æ kernel ‡®π‡©à /boot ‡®µ‡®ø‡©±‡®ö ‡®§‡©á ‡®ì‡®π /boot partition starting ‡®µ‡®ø‡©±‡®ö initialise ‡®®‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡®æ‡•§why bcoz to initilization of hardware we need modules & drivers ‡®§‡©á ‡®â‡®π (driver/ module) are in HardDisk & harddisk initilise ‡®π‡©ã‡®à ‡®®‡®π‡©Ä, kernel ‡®µ‡©Ä HardDisk ‡®µ‡®ø‡©±‡®ö ‡®π‡©à‡•§ HardDisk initialise ‡®®‡®π‡©Ä ‡®π‡©ã‡®à ‡®§‡®æ‡®Ç ‡®ï‡®ø‡©±‡®•‡©ã‡®Ç ‡®â‡®π ‡®∏‡®æ‡®∞‡©Ä‡®Ü‡®Ç ‡®ö‡©Ä‡®ú‡®æ‡®Ç ‡®ï‡®ø‡©±‡®•‡©ã‡®Ç load ‡®π‡©ã‡®£‡®ó‡©Ä‡®Ü‡®Ç ‡®ú‡®ø‡®π‡©ú‡©Ä‡®Ü‡®Ç ‡®ú‡®º‡®∞‡©Ç‡®∞‡©Ä ‡®π‡©à(like- initramfs,kernel ‡®¶‡©Ä img ‡®ï‡®ø‡©±‡®•‡©ã‡®Ç load ‡®π‡©ã‡®ä‡®ó‡©Ä) ‡®ú‡®¶‡©ã HardDisk ‡®¶‡®æ system ‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ ‡®π‡©Ä ‡®®‡®π‡©Ä‡®Ç ‡®π‡©à‡•§ ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ï‡®ø ‡®π‡©à ‡®ú‡©ã MBR ‡®π‡©à ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ GRUB ‡®ï‡®ø‡©±‡®•‡©á ‡®π‡©à‡•§GRUB ‡®¶‡©Ä information code ‡®µ‡®æ‡®≤‡©á 440bytes ‡®¶‡©á area ‡®π‡©à MBR ‡®¶‡®æ ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ ‡®π‡©Å‡©∞‡®¶‡®æ GRUB2 ‡®ï‡®ø‡©±‡®•‡©á ‡®π‡©à‡•§‡®ì‡®•‡©ã‡®Ç ‡®â‡®π GRUB ‡®®‡©Ç‡©∞ access ‡®ï‡®∞ ‡®≤‡©à‡®Ç‡®¶‡®æ‡®Ç ‡®§‡©á ‡®´‡®ø‡®∞ ‡®â‡®∏‡®¶‡©Ä help ‡®§‡©ã‡®Ç initramfs ‡®®‡©Ç‡©∞ access ‡®ï‡®∞‡®¶‡®æ ‡®´‡®ø‡®∞ modules & drivers load ‡®π‡©Å‡©∞‡®¶‡©á‡•§ chicken egg problem ‡®π‡©Ä ‡®á‡®π ‡®π‡©à ‡®µ‡©Ä harddisk initilise ‡®π‡©ã‡®à ‡®®‡®π‡©Ä ‡®§‡©á ‡®∏‡®æ‡®∞‡®æ ‡®ú‡©ã booting files ‡®¶‡®æ important data ‡®π‡©à ‡®â‡®π 

booting files ‡®Ö‡©∞‡®¶‡®∞ ‡®π‡©à ‡®§‡®æ‡®Ç ‡®´‡®ø‡®∞ ‡®ì‡®π load ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®π‡©ã‡®â‡®ó‡©Ä‡•§ ‡®á‡®∏‡®¶‡®æ solution ‡®á‡®π ‡®π‡©à ‡®µ‡©Ä MBR ‡®π‡©à ‡®â‡®π GRUB ‡®®‡©Ç‡©∞ point ‡®ï‡®∞ ‡®¶‡®ø‡©∞‡®¶‡®æ‡®Ç‡•§

‚ö´ Q). Difference b/w primary & secondary bootloader?

Ans). primary bootloader ‡®â‡®π bootloader ‡®π‡©à ‡®ú‡©ã point ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ GRUB2 ‡®®‡©Ç‡©∞ ‡®Æ‡®§‡®≤‡®¨ ‡®â‡®π code ‡®ú‡©ã 440 bytes ‡®µ‡®ø‡©±‡®ö reserved ‡®π‡©à in MBR‡•§main bootloader ‡®π‡©à GRUB2 ‡®ú‡®ø‡®∏‡®¶‡©Ä help ‡®®‡®æ‡®≤ kernel ‡®¶‡©Ä image vmlinuz ‡®§‡©á initramfs extract ‡®π‡©ã ‡®ï‡©á load ‡®π‡©ã ‡®ú‡®æ‡®Ç‡®¶‡®æ in RAM.

___________________________________
